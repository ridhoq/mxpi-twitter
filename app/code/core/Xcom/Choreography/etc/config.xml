<?xml version="1.0"?>
<!--
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Xcom
 * @package    Xcom_Choreography
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
-->
<config>
    <modules>
        <Xcom_Choreography>
            <version>0.0.1</version>
        </Xcom_Choreography>
    </modules>
    <global>
        <models>
            <xcom_choreography>
                <class>Xcom_Choreography_Model</class>
                <resourceModel>xcom_choreography_resource</resourceModel>
            </xcom_choreography>
            <xcom_choreography_resource>
                <class>Xcom_Choreography_Model_Resource</class>
                <entities>
                    <transaction>
                        <table>xcom_choreography_transaction</table>
                    </transaction>
                    <workflow>
                        <table>xcom_choreography_workflow</table>
                    </workflow>
                    <node>
                        <table>xcom_choreography_node</table>
                    </node>
                    <entity>
                        <table>xcom_choreography_entity</table>
                    </entity>>
                </entities>
            </xcom_choreography_resource>
        </models>
        <resources>
            <xcom_choreography_setup>
                <setup>
                    <module>Xcom_Choreography</module>
                </setup>
            </xcom_choreography_setup>
        </resources>
        <helpers>
            <xcom_choreography>
                <class>Xcom_Choreography_Helper</class>
            </xcom_choreography>
        </helpers>
        <events>
            <response_message_process_com_x_core_v1_messagereceived>
                <observers>
                    <message>
                        <class>xcom_choreography/message_messageReceived_inbound</class>
                        <method>process</method>
                    </message>
                </observers>
            </response_message_process_com_x_core_v1_messagereceived>
            <response_message_process_com_x_core_v1_messagevalidated>
                <observers>
                    <message>
                        <class>xcom_choreography/message_messageValidated_inbound</class>
                        <method>process</method>
                    </message>
                </observers>
            </response_message_process_com_x_core_v1_messagevalidated>
        </events>
    </global>
    <default>
        <xcom>
            <topics>
                <outbound>
                    <core>
                        <messageReceived>
                            <name>com.x.core.v1/MessageReceived</name>
                            <message>xcom_choreography/message_messageReceived_outbound</message>
                        </messageReceived>
                        <messageValidated>
                            <name>com.x.core.v1/MessageValidated</name>
                            <message>xcom_choreography/message_messageValidated_outbound</message>
                        </messageValidated>
                        <transactionCancelled>
                            <name>com.x.core.v1/TransactionCancelled</name>
                            <message>xcom_choreography/message_transactionCancelled_outbound</message>
                        </transactionCancelled>
                    </core>
                </outbound>
           </topics>
        </xcom>
    </default>
    <crontab>
        <!--jobs>
            <xcom_choreography_process_delayed>
                <schedule><cron_expr>* * * * *</cron_expr></schedule>
                <run><model>xcom_choreography/observer::test</model></run>
            </xcom_choreography_process_delayed>
        </jobs-->
    </crontab>
</config>

#
# Magento
#
# NOTICE OF LICENSE
#
# This source file is subject to the Academic Free License (AFL 3.0)
# that is bundled with this package in the file LICENSE_AFL.txt.
# It is also available through the world-wide-web at this URL:
# http://opensource.org/licenses/afl-3.0.php
# If you did not receive a copy of the license and are unable to
# obtain it through the world-wide-web, please send an email
# to license@magentocommerce.com so we can send you a copy immediately.
#
# DISCLAIMER
#
# Do not edit or add to this file if you wish to upgrade Magento to newer
# versions in the future. If you wish to customize Magento for your
# needs please refer to http://www.magentocommerce.com for more information.
#
# @category    tests
# @package     selenium
# @subpackage  uimaps
# @author      Magento Core Team <core@magentocommerce.com>
# @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
# @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
#
--- #Manage Stores and related pages

# 'Manage Stores' page
manage_stores:
    mca: system_store/
    click_xpath: //ul[@id='nav']//a[contains(@href, 'system_store')]
    title: Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    manage_stores:
                        xpath: //div[@id='storeGrid']
                        buttons:
                            reset_filter: //button[span='Reset Filter']
                            search: //button[span='Search']
                        links:
                            select_store_view: //td[normalize-space(@class)='a-left last']/a[text()='%NAME%']
                        fields:
                            website_name: //input[@name='website_title']
                            store_name: //input[@name='group_title']
                            store_view_name: //input[@name='store_title']
        buttons:
            create_website: //button[span='Create Website']
            create_store: //button[span='Create Store']
            create_store_view: //button[span='Create Store View']
        messages: &mainMessages
            success_saved_store:  //li[normalize-space(@class)='success-msg' and contains(., 'The store has been saved')]
            success_saved_store_view: //li[normalize-space(@class)='success-msg' and contains(., 'The store view has been saved')]
            success_saved_website: //li[normalize-space(@class)='success-msg' and contains(., 'The website has been saved')]
            success_deleted_store: //li[normalize-space(@class)='success-msg' and contains(., 'The store has been deleted')]
            success_deleted_store_view: //li[normalize-space(@class)='success-msg' and contains(., 'The store view has been deleted')]
            success_deleted_website: //li[normalize-space(@class)='success-msg' and contains(., 'The website has been deleted')]

# 'New Store View' Page
new_store_view:
    mca: system_store/newStore/
    title: New Store View / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_view_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            store_name: //select[@id='store_group_id']
                            store_view_status: //select[@id='store_is_active']
                        fields:
                            store_view_name: //input[@id='store_name']
                            store_view_code: //input[@id='store_code']
                            store_view_sort_order: //input[@id='store_sort_order']
                        required: [store_name, store_view_name, store_view_code, store_view_status]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            save_store_view: //button[span='Save Store View']
        messages:
            wrong_store_view_code: //li[normalize-space(@class)='error-msg' and contains(., 'The store code may contain only letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            store_view_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Store with the same code already exists')]
            empty_required_field: "%fieldXpath%/following-sibling::*[contains(., 'This is a required field.') and not(contains(@style,'display: none;'))]"

# 'Edit Store View' Page
edit_store_view:
    mca: system_store/editStore/store_id/%id%/
    title: %elementTitle% / Stores / System / Magento Admin
    uimap:
        form:
            fieldset:
                -
                    store_view_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            store_name: //select[@id='store_group_id']
                            store_view_status: //select[@id='store_is_active']
                        fields:
                            store_view_name: //input[@id='store_name']
                            store_view_code: //input[@id='store_code']
                            store_view_sort_order: //input[@id='store_sort_order']
                        required: [store_name, store_view_name, store_view_code, store_view_status]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            delete_store_view: //button[span='Delete Store View']
            save_store_view: //button[span='Save Store View']
        messages:
            wrong_store_view_code: //li[normalize-space(@class)='error-msg' and contains(., 'The store code may contain only letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            store_view_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Store with the same code already exists')]
            empty_required_field: "%fieldXpath%/following-sibling::*[contains(., 'This is a required field') and not(contains(@style,'display: none;'))]"

# 'New Website' Page
new_website:
    mca: system_store/newWebsite/
    title: New Website / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    website_info:
                        xpath: //form[@id='edit_form']
                        fields:
                            website_name: //input[@id='website_name']
                            website_code: //input[@id='website_code']
                            website_sort_order: //input[@id='website_sort_order']
                        required: [website_name, website_code]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            save_website: //button[span='Save Website']
        messages:
            wrong_website_code: //li[normalize-space(@class)='error-msg' and contains(., 'Website code may only contain letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            website_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Website with the same code already exists.')]
            empty_required_field: "%fieldXpath%/following-sibling::*[contains(., 'This is a required field') and not(contains(@style,'display: none;'))]"

# 'Edit Website' Page
edit_website:
    mca: system_store/editWebsite/website_id/%id%/
    title: %elementTitle% / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    website_info:
                        xpath: //form[@id='edit_form']
                        checkboxes:
                            set_default: //input[@id='is_default']
                        dropdowns:
                            default_store: //select[@id='website_default_group_id']
                        fields:
                            website_name: //input[@id='website_name']
                            website_code: //input[@id='website_code']
                            website_sort_order: //input[@id='website_sort_order']
                        required: [website_name, website_code]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            delete_website: //button[span='Delete Website']
            save_website: //button[span='Save Website']
        messages:
            wrong_website_code: //li[normalize-space(@class)='error-msg' and contains(., 'Website code may only contain letters (a-z), numbers (0-9) or underscore(_), the first character must be a letter')]
            website_code_exist: //li[normalize-space(@class)='error-msg' and contains(., 'Website with the same code already exists.')]
            empty_required_field: "%fieldXpath%/following-sibling::*[contains(., 'This is a required field') and not(contains(@style,'display: none;'))]"

# 'New Store' Page
new_store:
    mca: system_store/newGroup/
    title: New Store / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            website: //select[@id='group_website_id']
                            root_category:  //select[@id='group_root_category_id']
                        fields:
                            store_name: //input[@id='group_name']
                        required: [website, store_name, root_category]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            save_store: //button[span='Save Store']
        messages:
            empty_required_field: "%fieldXpath%/following-sibling::*[contains(., 'This is a required field') and not(contains(@style,'display: none;'))]"

# 'Edit Store' Page
edit_store:
    mca: system_store/editGroup/group_id/%id%/
    title: %elementTitle% / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    store_info:
                        xpath: //form[@id='edit_form']
                        dropdowns:
                            website: //select[@id='group_website_id']
                            root_category:  //select[@id='group_root_category_id']
                            default_store_view: //select[@id='group_default_store_id']
                        fields:
                            store_name: //input[@id='group_name']
                        required: [website, store_name, root_category]
        buttons:
            back: //button[span='Back']
            reset: //button[span='Reset']
            delete_store: //button[span='Delete Store']
            save_store: //button[span='Save Store']
        messages:
            empty_required_field: "%fieldXpath%/following-sibling::*[contains(., 'This is a required field') and not(contains(@style,'display: none;'))]"

# 'Delete Store' Page
detele_store:
    mca: system_store/deleteGroup/item_id/%id%/
    title: Delete Store / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    backup_options:
                        xpath: //*[@id='page:main-container']
                        dropdowns:
                            create_backup: //select[@id='store_create_backup']
                        buttons:
                            reset: //button[span='Cancel']
                            delete_store: //button[span='Delete Store']
        buttons:
            back: //button[span='Back']

# 'Delete Website' Page
detele_website:
    mca: system_store/deleteWebsite/item_id/%id%/
    title: Delete Website / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    backup_options:
                        xpath: //*[@id='page:main-container']
                        dropdowns:
                            create_backup: //select[@id='store_create_backup']
                        buttons:
                            reset: //button[span='Cancel']
                            delete_website: //button[span='Delete Website']
        buttons:
            back: //button[span='Back']

# 'Delete Store View' Page
detele_store_view:
    mca: system_store/deleteStore/item_id/%id%/
    title: Delete Store View / Stores / System / Magento Admin
    uimap:
        form:
            fieldsets:
                -
                    backup_options:
                        xpath: //*[@id='page:main-container']
                        dropdowns:
                            create_backup: //select[@id='store_create_backup']
                        buttons:
                            reset: //button[span='Cancel']
                            delete_store_view: //button[span='Delete Store View']
        buttons:
            back: //button[span='Back']
